{"version":3,"file":"static/js/827.aea27ddd.chunk.js","mappings":"2MAYA,EAVqB,WACjB,OAEI,gBACAA,MAAO,CAACC,QAAS,QAASC,MAAO,QAASC,OAAQ,QAASC,UAAW,UAAWC,OAAQ,UACzFC,IAAKC,EACLC,IAAI,SAEX,C,kMCOD,EAbkB,WACd,OACI,iBAAKC,UAAU,cAAf,WACI,gBAAKH,IAAKI,EAAUF,IAAI,cACxB,iBAAKC,UAAU,mBAAf,oCAC0B,kBAD1B,kBAIA,gBAAKH,IAAKK,EAAcH,IAAI,oBAGvC,E,+DC4DD,EApEmB,WACf,OAAoCI,EAAAA,EAAAA,UAAS,IAA7C,eAAOC,EAAP,KAAmBC,EAAnB,KACA,GAA4CF,EAAAA,EAAAA,WAAS,GAArD,eAAOG,EAAP,KAAuBC,EAAvB,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,GAArC,eAAOK,EAAP,KAAeC,EAAf,KAEA,GAAmDC,EAAAA,EAAAA,KAA5CC,EAAP,EAAOA,QAASC,EAAhB,EAAgBA,MAAOC,EAAvB,EAAuBA,WAAYC,EAAnC,EAAmCA,aAQnC,SAASC,IACLF,IACAC,EAAaN,GACRQ,KAAKC,GACVR,EAAUD,EAAS,GACtB,EAXDU,EAAAA,EAAAA,YAAU,WACNX,GAAkB,GAClBQ,GAEH,GAAE,IASH,IAUoBI,EAVdF,EAAgB,SAACG,GACnBf,EAAc,GAAD,eAAKD,IAAL,OAAoBgB,KACjCb,GAAkB,EACrB,EA2BKc,EAAeT,GAAQ,SAACU,EAAA,EAAD,IAAmB,KAC1CC,EAAUZ,GAAU,SAACa,EAAA,EAAD,IAAc,KAExC,OACI,iBAAKxB,UAAU,eAAf,UACKqB,EACAE,GA1BWJ,EA2BAf,GAzBZ,eAAIJ,UAAU,eAAd,SAEImB,EAAOM,KAAI,SAACN,EAAQO,GAChB,IAAQC,EAAgCR,EAAhCQ,GAAIC,EAA4BT,EAA5BS,UAAWC,EAAiBV,EAAjBU,MAAOC,EAAUX,EAAVW,MAC9B,OACI,eAAI9B,UAAU,eAAd,UACI,UAAC,KAAD,CAAM+B,GAAE,kBAAaJ,GAArB,WACI,gBAAK9B,IAAK+B,EAAW7B,IAAK8B,EAAO7B,UAAU,sBAC3C,gBAAKA,UAAU,oBAAf,SAAoC6B,KACpC,gBAAK7B,UAAU,qBAAf,SAAqC8B,QAJXJ,EAQzC,QAaL,mBACI1B,UAAU,mCACVgC,SAAU1B,EACV2B,QApCW,WACnB1B,GAAkB,GAClBQ,GACH,EA8BO,UAII,gBAAKf,UAAU,QAAf,2BAIf,EC7DD,EATmB,WACf,OACI,iCACI,SAAC,EAAD,KACA,SAAC,EAAD,MAGX,C,gFCNc,SAASkC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,EAClD,CDES,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,EACtH,CFGmC,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,uIACtB,CHG8F,EAC9F,C","sources":["Components/marvel_starter/components/errorMessage/ErrorMessage.js","Components/marvel_starter/components/appBanner/AppBanner.js","Components/marvel_starter/components/comicsList/ComicsList.js","Components/marvel_starter/components/pages/ComicsPage.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        // <img src={process.env.PUBLIC_URL + '/favicon.ico'} />\r\n        <img\r\n        style={{display: 'block', width: '250px', height: '250px', objectFit: 'contain', margin: '0 auto'}}\r\n        src={img}\r\n        alt=\"Error\" />\r\n    );\r\n};\r\n\r\nexport default ErrorMessage;","import './appBanner.scss';\r\nimport avengers from '../../resources/img/Avengers.png';\r\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\r\n\r\nconst AppBanner = () => {\r\n    return (\r\n        <div className=\"app__banner\">\r\n            <img src={avengers} alt=\"Avengers\"/>\r\n            <div className=\"app__banner-text\">\r\n                New comics every week!<br/>\r\n                Stay tuned!\r\n            </div>\r\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppBanner;","import { useState, useEffect } from 'react';\r\nimport './comicsList.scss';\r\nimport useMarvelService from './../../services/MarvelSevice';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Spinner from '../spinner/Spinner';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst ComicsList = () => {\r\n    const [comicsList, setComicsList] = useState([]);\r\n    const [newItemLoading, setNewItemLoading] = useState(false);\r\n    const [offset, setOffset] = useState(0);\r\n     \r\n    const {loading, error, clearError, getAllComics} = useMarvelService();\r\n    \r\n    useEffect(() => {\r\n        setNewItemLoading(true);\r\n        onRecuest();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    function onRecuest() {\r\n        clearError();\r\n        getAllComics(offset)\r\n            .then(comicsLoading);\r\n        setOffset(offset + 12)\r\n    }\r\n\r\n    const comicsLoading = (newList) => {\r\n        setComicsList([...comicsList, ...newList])\r\n        setNewItemLoading(false);\r\n    }\r\n\r\n    const onSetNewComics = () => {\r\n        setNewItemLoading(true);\r\n        onRecuest();    \r\n    }\r\n\r\n    const viewComics = (comics) => {\r\n        return (\r\n            <ul className=\"comics__grid\">\r\n                {\r\n                comics.map((comics, i) => {\r\n                    const { id, thumbnail, title, price } = comics;\r\n                    return (\r\n                        <li className=\"comics__item\" key={i}>\r\n                            <Link to={`/comics/${id}`}>\r\n                                <img src={thumbnail} alt={title} className=\"comics__item-img\"/>\r\n                                <div className=\"comics__item-name\">{title}</div>\r\n                                <div className=\"comics__item-price\">{price}</div>\r\n                            </Link>\r\n                        </li>\r\n                    )\r\n                })}      \r\n            </ul>\r\n        )\r\n    }\r\n    \r\n    const errorMessage = error ? <ErrorMessage /> : null;\r\n    const spinner = loading ? <Spinner /> : null;\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {errorMessage}\r\n            {spinner}\r\n            {viewComics(comicsList)}\r\n            <button\r\n                className=\"button button__main button__long\"\r\n                disabled={newItemLoading}\r\n                onClick={onSetNewComics}>\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import AppBanner from './../appBanner/AppBanner';\r\nimport ComicsList from './../comicsList/ComicsList';\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <AppBanner />\r\n            <ComicsList />\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ComicsPage;","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["style","display","width","height","objectFit","margin","src","img","alt","className","avengers","avengersLogo","useState","comicsList","setComicsList","newItemLoading","setNewItemLoading","offset","setOffset","useMarvelService","loading","error","clearError","getAllComics","onRecuest","then","comicsLoading","useEffect","comics","newList","errorMessage","ErrorMessage","spinner","Spinner","map","i","id","thumbnail","title","price","to","disabled","onClick","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}